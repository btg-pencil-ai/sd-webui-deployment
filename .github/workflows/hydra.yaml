name: Build and Push to Hydra GARs

on:
  pull_request:
    types: [closed]
    branches:
      - "epic-*"
      - "EPIC-*"

env:
  SERVICE_NAMES: sd-webui-server



concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

  
jobs:
  prepare-env:
    name: Prepare Env
    runs-on: ${{ (inputs.RUNNER) || 'blacksmith-2vcpu-ubuntu-2204' }}
    if: github.event.pull_request.merged == true
    timeout-minutes: 2
    outputs:
      SERVICE_ACCOUNT: ${{ steps.variable.outputs.SERVICE_ACCOUNT }}
      OIDC_PROVIDER: ${{ steps.variable.outputs.OIDC_PROVIDER }}
      GAR_REPOSITORY: ${{ steps.variable.outputs.GAR_REPOSITORY }}
      ENV: ${{ steps.variable.outputs.ENV }}
      SLACK_WEBHOOK_URL: ${{ steps.variable.outputs.SLACK_WEBHOOK_URL }}
      PR_NUM: ${{ steps.check_pr.outputs.PR_NUM }}

    steps:
      - name: Check Branch & PR Number
        id: check_pr
        run: |
          pull_request_number="${{ github.event.pull_request.number }}"
          if [[ "$GITHUB_BASE_REF" != epic-* && "$GITHUB_BASE_REF" != EPIC-* ]]; then
            echo "Branch does not start with 'epic-' or 'EPIC-', skipping job."
            exit 0
          fi
          echo "::set-output name=PR_NUM::$pull_request_number"
  
      - id: variable
        if: steps.check_pr.outputs.PR_NUM
        uses: btg-pencil-ai/kube-deployment/workflows/composite/prepare-env-hydra@main

  build-push-image:
    name: Build and Push Image
    if: needs.prepare-env.outputs.PR_NUM && github.event.pull_request.merged == true
    runs-on: ${{ (inputs.RUNNER) || 'blacksmith-2vcpu-ubuntu-2204' }}
    timeout-minutes: 40
    permissions:
      id-token: write
      pull-requests: write
      contents: read
    needs: prepare-env
    env:
      SERVICE_ACCOUNT: ${{ needs.prepare-env.outputs.SERVICE_ACCOUNT }}
      OIDC_PROVIDER: ${{ needs.prepare-env.outputs.OIDC_PROVIDER }}
      ENV: ${{ needs.prepare-env.outputs.ENV }}
      GAR_REPOSITORY: ${{ needs.prepare-env.outputs.GAR_REPOSITORY }}
      PR_NUM: ${{ needs.prepare-env.outputs.PR_NUM }}

    steps:
      - id: build-push-image
        uses: btg-pencil-ai/kube-deployment/workflows/composite/build-push-hydra@main
        with:
          SERVICE_ACCOUNT: ${{ vars[env.SERVICE_ACCOUNT] }}
          OIDC_PROVIDER: ${{ vars[env.OIDC_PROVIDER] }}
          DOCKERFILE_PATH: ${{ env.DOCKERFILE_PATH }}
          DOCKERFILE_CONTEXT_PATH: ${{ env.DOCKERFILE_CONTEXT_PATH }}
          DOCKER_BUILDARGS: ${{ env.DOCKER_BUILDARGS}}
          GAR_REPOSITORY: ${{ env.GAR_REPOSITORY }}
          PR_NUM: ${{ env.PR_NUM }}

  generate-hydra-helm-values:
    name: Generate and Push Hydra Helm Values
    if: needs.prepare-env.outputs.PR_NUM && github.event.pull_request.merged == true
    runs-on: ${{ (inputs.RUNNER) || 'blacksmith-2vcpu-ubuntu-2204' }}
    timeout-minutes: 10
    permissions:
      id-token: write
      pull-requests: write
      contents: write
    needs:
      - prepare-env
      - build-push-image
    env:
      IMAGE_TAG: ${{ needs.prepare-env.outputs.PR_NUM }}

    steps:
      - id: generate-hydra-helm-values
        uses: btg-pencil-ai/kube-deployment/workflows/composite/generate-pr-hydra@main
        with:
          PENCIL_ACTION_APPID: ${{ vars.PENCIL_ACTION_APPID }}
          PENCIL_ACTION_APP_PRIVATE_KEY: ${{ secrets.PENCIL_ACTION_APP_PRIVATE_KEY }}

  ### failure slack alert
  slack-notification:
    name: Slack Notification
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    runs-on: ${{ (inputs.RUNNER) || 'blacksmith-2vcpu-ubuntu-2204' }}
    needs:
      - prepare-env
      - build-push-image
      - generate-hydra-helm-values
    env:
     SLACK_WEBHOOK_URL: ${{needs.prepare-env.outputs.SLACK_WEBHOOK_URL}}

    steps:
      - id: slack-notification
        uses: btg-pencil-ai/kube-deployment/workflows/composite/slack-alert@main
        with: 
          SLACK_WEBHOOK_URL: ${{ vars[env.SLACK_WEBHOOK_URL] }}          