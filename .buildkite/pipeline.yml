# Nodes with values to reuse in the pipeline.
common_params:
  push_to_gar: &push_to_gar |-
    cat /var/lib/buildkite-agent/gcp/pencil-stg-buildkite-sa-base64.key | docker login -u _json_key_base64 --password-stdin https://europe-west1-docker.pkg.dev
    docker tag $$SERVICE_NAME:latest $$GCP_REGION-docker.pkg.dev/$$GCP_PROJECT_ID/$$GAR_NAMESPACE/$$SERVICE_NAME:"$$BUILD_TAG-$$BUILDKITE_BUILD_NUMBER"
    docker push $$GCP_REGION-docker.pkg.dev/$$GCP_PROJECT_ID/$$GAR_NAMESPACE/$$SERVICE_NAME:"$$BUILD_TAG-$$BUILDKITE_BUILD_NUMBER"
  deploy_gke: &deploy_gke |-
    source ~/.bashrc
    ~/kubectl config use-context $$GKE_CLUSTER_NAME
    RABBIT_URL="$$GCP_RABBIT_URL" DOCKER_REGISTRY="$$GCP_REGION-docker.pkg.dev/$$GCP_PROJECT_ID" NAMESPACE="$$GAR_NAMESPACE" TAG="$$BUILD_TAG-$$BUILDKITE_BUILD_NUMBER" envsubst < $$DEPLOYMENT_FILE.tmpl > $$DEPLOYMENT_FILE.yaml
    ~/kubectl apply -f $$DEPLOYMENT_FILE.yaml --namespace=$$K8S_NAMESPACE --grace-period 900 --wait
  gke_node_selector: &gke_node_selector |-
    ~/kubectl patch deployments $$DEPLOYMENT_NAME --type JSON -p '[{"op":"add","path":"/spec/template/spec/nodeSelector","value": {}},{"op":"add","path":"/spec/template/spec/nodeSelector/pool","value":"gpu-machines"}]'
env:
  SERVICE_NAME: "sd-webui-server"
  EXCHANGE_NAME: "pencil_exchange"
steps:
  - command:
      - docker build -f Dockerfile --no-cache --rm -t $$SERVICE_NAME:latest --label service=$$SERVICE_NAME .
      - *push_to_gar
    
    label: "Workers: Build Image & Push to ECR & GAR"
    if: 'build.branch == "development" || build.branch == "main" || build.branch == "release-pro"'
  
  - wait
  
  - group: ":rocket: Deploy to :kubernetes:"
    steps:
      - label: ":kubernetes: SD WebUI Server SDXL"
        command: 
          - *deploy_gke
          - *gke_node_selector
          
        env:
          DEPLOYMENT_NAME: "sd-webui-sdxl"
          DEPLOYMENT_FILE: "deployment/sd-webui-sdxl"
          POD_REPLICAS_SD_WEBUI_SERVER: 1
          PERSISTENT_VOLUME_CLAIM_NAME: "export-pvc"
        if: 'build.branch == "development"'

      - label: ":kubernetes: SD WebUI Server SDXL"
        command: 
          - *deploy_gke
          - *gke_node_selector
          
        env:
          DEPLOYMENT_NAME: "sd-webui-sdxl"
          DEPLOYMENT_FILE: "deployment/sd-webui-sdxl"
          POD_REPLICAS_SD_WEBUI_SERVER: 2
          PERSISTENT_VOLUME_CLAIM_NAME: "export-pvc"
        if: 'build.branch == "main" || build.branch == "release-pro"'
        
      - label: ":kubernetes: SD WebUI Server SD15"
        command: 
          - *deploy_gke
          - *gke_node_selector
          
        env:
          DEPLOYMENT_NAME: "sd-webui-sd15"
          DEPLOYMENT_FILE: "deployment/sd-webui-sd15"
          POD_REPLICAS_SD_WEBUI_SERVER: 1
          PERSISTENT_VOLUME_CLAIM_NAME: "export-pvc"
        if: 'build.branch == "development"'
        
      - label: ":kubernetes: SD WebUI Server SD15"
        command: 
          - *deploy_gke
          - *gke_node_selector
          
        env:
          DEPLOYMENT_NAME: "sd-webui-sd15"
          DEPLOYMENT_FILE: "deployment/sd-webui-sd15"
          POD_REPLICAS_SD_WEBUI_SERVER: 4
          PERSISTENT_VOLUME_CLAIM_NAME: "export-pvc"
        if: 'build.branch == "main" || build.branch == "release-pro"'

      - label: ":kubernetes: SD WebUI Server SD15 Inpaint"
        command: 
          - *deploy_gke
          - *gke_node_selector
          
        env:
          DEPLOYMENT_NAME: "sd-webui-sd15-inpaint"
          DEPLOYMENT_FILE: "deployment/sd-webui-sd15-inpaint"
          POD_REPLICAS_SD_INPAINT_WEBUI_SERVER: 1
          PERSISTENT_VOLUME_CLAIM_NAME: "export-pvc"
        if: 'build.branch == "development"'
        
      - label: ":kubernetes: SD WebUI Server SD15 Inpaint"
        command: 
          - *deploy_gke
          - *gke_node_selector
          
        env:
          DEPLOYMENT_NAME: "sd-webui-sd15-inpaint"
          DEPLOYMENT_FILE: "deployment/sd-webui-sd15-inpaint"
          POD_REPLICAS_SD_INPAINT_WEBUI_SERVER: 4
          PERSISTENT_VOLUME_CLAIM_NAME: "export-pvc"
        if: 'build.branch == "main" || build.branch == "release-pro"'